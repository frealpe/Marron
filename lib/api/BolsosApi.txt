
import 'dart:typed_data';
import 'package:admin_dashboard/services/local_storage.dart';
import 'package:dio/dio.dart';


class BolsosApi{

  String baseUrl= 'localhost:8080/api';

  static Dio dio = Dio();

  static void configureDio(){

    dio.options.baseUrl= 'http://localhost:8080/api';

    //Configurar Headers

    dio.options.headers = {
      'x-token': LocalStorage.prefs.getString('token') ?? '',
      'Content-Type': 'application/json'
    };

  }

///////////////////////////////////////////////////////////////
  static Future httpGet(String path) async{
    try{
      final resp= await dio.get(path);
      return resp.data;
    } on DioError catch(e){
      print(e.response);
      throw ('Error en el Get');
    }
  }
///////////////////////////////////////////////////////////////
  static Future Post(String path,Map<String,dynamic>datos ) async{
    final formData = FormData.fromMap(datos);

    try{

      final resp= await dio.post('auth/login/',data:datos);
      print(resp);

      return resp;

    } on DioError catch(e){
      print('e');
      throw ('Error en el Posti');
    }
  }


///////////////////////////////////////////////////////////////
  static Future put(String path,Map<String,dynamic>data ) async{

    final formData = FormData.fromMap(data);
    try{
      final resp= await dio.put(path,data: formData);
      print(resp.data);
      return resp.data;

    } on DioError catch(e){
      print('e');
      throw ('Error en el PUT');
    }
  }
///////////////////////////////////////////////////////////////
  static Future delete(String path,Map<String,dynamic>data ) async{

    final formData = FormData.fromMap(data);
    try{
      final resp= await dio.delete(path,data: formData);
      return resp.data;

    } on DioError catch(e){
      print('e');
      throw ('Error en el Delete');
    }
  }
///////////////////////////////////////////////////////////////
  static Future uploadFile(String path,Uint8List bytes ) async{

    final formData = FormData.fromMap({
      'archivo': MultipartFile.fromBytes(bytes)
    });

    try{
      final resp= await dio.put(path,data: formData);
      return resp.data;

    } on DioError catch(e){
      print('e');
      throw ('Error en el PUT');
    }
  }

}